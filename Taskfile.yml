version: '3'

output: prefixed

vars:
  PROJECT_NAME: pyright-analysis

tasks:
  dev:readme:refresh-screenshot:
    desc: Re-generate the screenshot of the command-line help output
    preconditions:
      - sh: type "termshot" &>/dev/null
        msg: Please install termshot, see https://github.com/homeport/termshot?tab=readme-ov-file#installation
    interactive: true
    cmds:
      - |
        uv run \
            termshot --columns 100 --show-cmd --filename assets/cmd-help.png -- \
              {{.PROJECT_NAME}} --help \
          && echo -e '\033[1;92mScreenshot generated\033[0m'
  
  dev:readme:refresh-graph:
    desc: Re-generate the graph screenshot
    preconditions:
      - sh: type "magick" &>/dev/null
        msg: Please install imagemagick, see https://imagemagick.org/script/download.php
    vars:
      TEMPGRAPH:
        sh: mktemp -t graph.png
    cmds:
      - defer: rm -f "{{.TEMPGRAPH}}"
      - |
        uv run pyright-analysis image assets/prefect-sample-report.json \
           --width 983 --height 671 --scale 2.3 \
           --format png --filename "{{.TEMPGRAPH}}"
        magick assets/framing.png \( -page +70+190 "{{.TEMPGRAPH}}" \) -flatten assets/graph-screenshot.png

  dev:install-precommit:
    desc: Install pre-commit into local git checkout
    run: once
    status:
      - grep -q 'pre-commit\.com' .git/hooks/*
    cmds:
      - uv run pre-commit install

  dev:lint:uv-lock:
    aliases:
      - check-lock
    desc: Tests if uv lock is up-to-date
    sources:
      - pyproject.toml
      - uv.lock
    preconditions:
      - sh: type "uv" &>/dev/null
        msg: Please install uv, see https://docs.astral.sh/uv/getting-started/installation/
    cmds:
      - |
        uv lock --locked 2>/dev/null || {
          echo -e '\033[0;31mThe lockfile at `uv.lock` needs to be updated. To update the lockfile, run `task compile-deps`\033[0m'.
          exit 1
        } >&2

  dev:lint:code:
    sources:
      - pyproject.toml
      - src/**/*.py
    cmds:
      - uv run ruff format --check
      - uv run ruff check

  dev:lint:renovate:
    sources:
      - .github/renovate.json
    deps:
      - dev:install-precommit
    cmds:
      - pre-commit run --files .github/renovate.json renovate-config-validator

  dev:lint:
    aliases:
      - lint
    desc: Runs linters
    deps:
      - dev:lint:uv-lock
      - dev:lint:code
      - dev:lint:renovate

  dev:format:code:
    desc: Formats main project
    sources:
      - pyproject.toml
      - src/**/*.py
    cmds:
      - ruff format

  dev:format:
    aliases:
      - format
    desc: Runs formatters
    deps:
      - dev:format:code

  dev:uv-lock:
    aliases:
      - lock
    desc: Updates uv lockfile
    preconditions:
      - sh: type "uv" &>/dev/null
        msg: Please install uv, see https://docs.astral.sh/uv/getting-started/installation/
    sources:
      - pyproject.toml
      - support/pyproject.toml
    generates:
      - uv.lock
    cmds:
      - uv lock
  
  dev:test:
    aliases:
      - test
    desc: Run the tests
    cmds:
      - uv run pytest {{.CLI_ARGS}}
  
  default:
    deps:
      - dev:format
      - dev:lint
      - dev:test
